<?xml version="1.0"?>

<window id="main-window"
	xmlns:html="http://www.w3.org/1999/xhtml"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	onload="onMainLoad();" onunload="onUnLoad();"
	style="width:760px; height:480px;"
	title="Zealotry"
	orient="vertical" persist="width height" windowtype="skotos:zealotry">

<script type="application/x-javascript">
  <![CDATA[
    try {
    	netscape.security.PrivilegeManager.enablePrivilege(
    	    "UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    	);
    } catch (err) {
    	throw("I failed enablePrivilege: " + err);
    }
    var pm = netscape.security.PrivilegeManager;
    var privs = "UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect";

    function submitSkotosSelectCommand(elementName)
    {
    	try {
    	    netscape.security.PrivilegeManager.enablePrivilege(
    		"UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    	    );
    	} catch (err) {
    	    throw("I failed enablePrivilege: " + err);
    	}
            var rdoc      = document.getElementById('right-frame').contentDocument;
            var elementDo = rdoc.getElementById(elementName);
            var chatCode  = rdoc.chatMode ? "/" : "";
            handleInputLine(chatCode + elementDo.options[elementDo.selectedIndex].value);
            elementDo.selectedIndex = 0;

    	/* Refocus the input window after clicking in the output window. */
    	var obj = document.getElementById("input");
    	obj.focus();
    }

    function submitSkotosClickCommand(elementName)
    {
    	try {
    	    netscape.security.PrivilegeManager.enablePrivilege(
    		"UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    	    );
    	} catch (err) {
    	    throw("I failed enablePrivilege: " + err);
    	}
            var rdoc      = document.getElementById('right-frame').contentDocument;
            var elementDo = rdoc.getElementById(elementName);
            var chatCode  = rdoc.chatMode ? "/" : "";
            handleInputLine(chatCode + elementDo.title);

    	/* Refocus the input window after clicking in the output window. */
    	var obj = document.getElementById("input");
    	obj.focus();
    }

    function generate_fontmenu()
    {
        try {
    	    netscape.security.PrivilegeManager.enablePrivilege(
        		"UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    		);
    	} catch (err) {
    	    alert("I failed enablePrivilege: " + err);
    	    return;
    	}

    	var langgroup = new Array("x-western");
    	var fonttype  = new Array("serif", "sans-serif", "cursive", "fantasy", "monospace");
    	var fontList  = Components.classes["@mozilla.org/gfx/fontlist;1"].createInstance(Components.interfaces.nsIFontList);
    	var results   = new Array();
    	var lsz       = langgroup.length;
    	var fsz       = fonttype.length;
    	var fontNameStr;
    	var fontName;
        var found     = new Array();
        var i, j;

    	for (i = 0; i < lsz; i++) {
    	    for (j = 0; j < fsz; j++) {
        		var fontEnumerator = fontList.availableFonts(langgroup[i], fonttype[j]);
        		while (fontEnumerator.hasMoreElements()) {
        		    fontName = fontEnumerator.getNext();
        		    fontName = fontName.QueryInterface(Components.interfaces.nsISupportsString);
        		    fontNameStr = fontName.toString();
        		    if (!found[fontNameStr]) {
            			results[results.length] = fontNameStr;
                        found[fontNameStr] = 1;
        		    }
        		}
    	    }
    	}

    	var d           = document;
    	var popup       = d.getElementById('font-list');
    	var menuitems   = results;
    	var l           = menuitems.length;
    	var elements    = new Array();
    	var newElement;
    	var letter;

    	for (var z = 0; z < l; z++) {
    	    letter = menuitems[z].substring(0, 1).toUpperCase();
    	    if (!elements[letter]) {
        		elements[letter] = d.createElement('menupopup');
        		elements[letter].setAttribute('id', 'p_' + letter);
            }
            var item = d.createElement('menuitem');
            item.setAttribute('id', 'fm_' + menuitems[z]);
            item.setAttribute('label', menuitems[z]);
            item.setAttribute('oncommand', 'setFont("' + menuitems[z] + '");');
            item.style.fontFamily = menuitems[z];
            elements[letter].appendChild(item);
        }
    	// Loop over 'A' to 'Z":
    	for (var z = 65; z <= 90; z++) {
    	    var chr = String.fromCharCode(z);
    	    if (elements[chr]) {
        		var menu = d.createElement('menu');
        		menu.setAttribute('id', 'm_'+chr);
        		menu.setAttribute('label', chr);
        		popup.appendChild(menu);
        		menu.appendChild(elements[chr]);
    	    }
        }

		/*
		 * Font sizes:
		 */
		popup = d.getElementById('sizes-menu');
		var size_el;
		
		for (var z = 6; z < 30; z++) {
            size_el = d.createElement( 'menuitem' );
            size_el.setAttribute('id', 's_'+z );
            size_el.setAttribute('label', z );
            size_el.setAttribute('oncommand', 'setSize(' + z + ' + "pt")' );
		    popup.appendChild( size_el );
		}
    }

    function submitSkotosLink(link)
    {
    	try {
    	    netscape.security.PrivilegeManager.enablePrivilege(
        		"UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    		);
    	} catch (err) {
    	    alert("I failed enablePrivilege: " + err);
    	    return;
    	}
    	var rdoc = document.getElementById('right-frame').contentDocument;
    	var chatCode = rdoc.chatMode ? "/" : "";
    	handleInputLine(chatCode+link);

    	/* Refocus the input window after clicking in the output window. */
    	var obj = document.getElementById("input");
    	obj.focus();
    }

    function bubbleSettings()
    {
    	var rframe = document.getElementById('right-frame').contentDocument;
    	var cframe = document.getElementById('center-frame').contentDocument;

    	rframe.rs = submitSkotosSelectCommand;
    	rframe.rc = submitSkotosClickCommand;

    	cframe.skotosLink = submitSkotosLink;
    	generate_fontmenu();
    }

    /*
     * Font/size switch function.
     */
    var cletter, cfont, csize;
    var pletter = "m_";
    var psize   = "s_";
    var pfont   = "fm_";

    function switchSelection( what, val )
    {
        try {
            netscape.security.PrivilegeManager.enablePrivilege(
                "UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
        );
        } catch (err) {
            throw("I failed enablePrivilige: " + err);
        }
        var font_element;
        var old = window["c"+what];

        font_element = document.getElementById(old);

        if (font_element) {
            font_element.style.color      = '';
            font_element.style.fontWeight = '';
        }

        var element_id = val;

        if (typeof(window["p"+what]) != "undefined")
            element_id = window["p"+what] + element_id;

        window["c"+what] = element_id;

        font_element = document.getElementById(element_id);
        if (font_element) {
            font_element.style.color      = 'red';
            font_element.style.fontWeight = 'bold';
        }
    }

    function setFont(family)
    {
    	try {
    	    netscape.security.PrivilegeManager.enablePrivilege(
    		"UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    	    );
    	} catch (err) {
    	    alert("I failed enablePrivilege: " + err);
    	    return;
    	}
    	document.getElementById('center-frame').contentDocument.body.style.fontFamily = family.replace(/'/g, "\\'");
	document.getElementById('scrollback').contentDocument.body.style.fontFamily = family.replace(/'/g, "\\'");
    	document.getElementById('input').style.fontFamily = family.replace(/'/g, "\\'");

        var pref = Components.classes['@mozilla.org/preferences-service;1'].getService();
        pref = pref.QueryInterface(Components.interfaces.nsIPrefBranch);
        pref.setCharPref(zealousPreference("fontStyle"), document.getElementById('center-frame').contentDocument.body.style.fontFamily);

        switchSelection('font', family);
        switchSelection('letter', family.substring(0,1).toUpperCase());
    }

    function setSize(pts)
    {
        try {
    	    netscape.security.PrivilegeManager.enablePrivilege(
    	        "UniversalBrowserRead UniversalBrowserWrite UniversalXPConnect"
    	    );
        } catch (err) {
     	    alert("I failed enablePrivilege: " + err);
     	    return;
        }
	// This shit don't work for me apparently. I can change font size all day long
	// and nothing changes. -- Strike that, this apparently only affects fixed font size.
        document.getElementById('center-frame').contentDocument.body.style.fontSize = pts;
    	document.getElementById('input').style.fontSize = pts;
	// TODO: Convert pts to an int, and decrement by 2 and put in scrollback fontsize.
	// document.getElementById('scrollback').contentDocument.body.style.fontSize = "10pt";

        var pref = Components.classes['@mozilla.org/preferences-service;1'].getService();
        pref = pref.QueryInterface(Components.interfaces.nsIPrefBranch);
        pref.setCharPref(zealousPreference("fontSize"), document.getElementById('center-frame').contentDocument.body.style.fontSize);

        switchSelection( 'size', pts.substring(0, pts.length-2) );
    }
    
    var inputRows = 2;
    var foop;
    
    function onInput()
    {
        var inEl = document.getElementById('input');
        if        (inEl.inputField.rows < inputRows) {
            alert ("<rows");
        } else if (inEl.inputField.rows > inputRows) {
            alert (">rows");
        }
        inputRows = inEl.inputField.rows;
    }
    
  ]]>
</script>

<script type="application/x-javascript" src="jslib.js"/>
<script type="application/x-javascript" src="filesystem.js"/>
<script type="application/x-javascript" src="file.js"/>

<script type="application/x-javascript" src="utils.js"/>
<script type="application/x-javascript" src="md5.js"/>
<script type="application/x-javascript" src="connection-xpcom.js"/>
<script type="application/x-javascript" src="network.js"/>
<script type="application/x-javascript" src="client.js"/>

<script type="application/x-javascript" src="macro.js"/>

<script type="application/x-javascript" src="zealotry.js"/>

<hbox style="-moz-box-flex: 1">
  <html:iframe name="left-frame" id="left-frame" type="content"
	  style="-moz-box-flex: 0; width: 145px; height=100%; overflow: hidden"
	  src="about:blank"/>

  <keyset>
    <key id="dict-key" keycode="VK_F2" oncommand="helpMenuInit('dictionary');"/>
  </keyset>
  <vbox style="-moz-box-flex: 1">
    <toolbox>
     <menubar id="sample-menubar">
       <menu id="file-menu" label="File">
         <menupopup id="file-popup" onpopupshowing="fileMenuInit();">
           <menuitem id="menuitem_logging" type="checkbox"
                     label="Logging..." oncommand="onToggleLogging(event);"/>
           <menuitem id="menuitem_autolog" type="checkbox"
                     label="AutoLog..." oncommand="onToggleAutoLog(event);"/>
           <menuitem id="menuitem_echo" type="checkbox"
                     label="Echo" oncommand="onToggleEcho(event);"/>
           <menuseparator/>
           <menuitem label="Exit" oncommand="window.close();"/>
         </menupopup>
       </menu>
       <menu id="edit-menu" label="Edit">
         <menupopup id="edit-popup" onpopupshowing="editMenuInit();">
           <menuitem id="menuitem_copy" label="Copy"   oncommand="onCopy();"/>
           <menuitem id="menuitem_paste" label="Paste" oncommand="onPaste();"/>
           <menuseparator/>
           <menuitem label="Load Macros" oncommand="window.myMacros.processMacroCommand('LOAD');"/>
           <menuitem label="Save Macros" oncommand="window.myMacros.processMacroCommand('STORE');"/>
           <menuseparator/>
           <menuitem label="Load Config" oncommand="readConfigurationFile('menu');"/>
           <menuitem label="Save Config" oncommand="writeConfigurationFile();"/>
         </menupopup>
       </menu>
       <menu id="font-and-size" label="Font">
         <menupopup id="fonts-and-sizes-menu">
           <menu id="fonts" label="Style">
             <menupopup id="font-list">
             </menupopup>
           </menu>
           <menu id="sizes" label="Size">
             <menupopup id="sizes-menu"/>
           </menu>
         </menupopup>
       </menu>
       <menu id="help" label="Help">
	<menupopup id="help-popup">
	  <menuitem label="Help Contents" oncommand="helpMenuInit('content');"/>
          <menuitem label="Changelog Notes" oncommand="helpMenuInit('changelog');"/>
	  <menuseparator/>
          <menuitem label="Dictionary Lookup" key="dict-key" oncommand="helpMenuInit('dictionary');"/>
          <menuseparator/>
	  <menuitem label="About Zealotry" oncommand="helpMenuInit('about');"/>
	</menupopup>
       </menu>
     </menubar>
    </toolbox>
    <!-- html:div
        id="scrollback"
        name="scrollback"
        style="border: solid #00000 1px; background: #000000; color: #ffffff; font-weight: bold; height: 28pt; font-size: 10pt; position: absolute; top: 5px;"/ -->
    <iframe 
	name="scrollback" 
	id="scrollback" 
	type="content" 
	style="min-height: 70%; max-height: 70%;" src="about:blank"/>
    <splitter id="scroll_splitter" state="collapsed" collapse="before"/>
    <iframe name="center-frame" id="center-frame" type="content" flex="1" src="about:blank"/>
    <splitter state="open" collapse="before"/>
    <textbox autostretch="true" style="margin: 0; padding: 0" onkeypress="onInput();" rows="2" multiline="true" id="input"/>
  </vbox>

  pref("bugger", true);

  <html:iframe name="right-frame" id="right-frame" type="content"
	  style="-moz-box-flex: 0; width: 145px; height=100%; overflow: hidden"
          src="about:blank"/>
</hbox>
</window>
